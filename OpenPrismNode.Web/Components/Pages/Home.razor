@page "/"
@layout MainLayout
@using Microsoft.Extensions.Options
@using OpenPrismNode.Core.Common
@using OpenPrismNode.Web.Common
@using OpenPrismNode.Web.Components.Layout
@inject IOptions<AppSettings> AppSettingsOptions

<PageTitle>OpenPrismNode</PageTitle>

<!-- Container with a light gray background and centered text -->
<div class="bg-gray-50 text-center">
    <div class="container mx-auto px-4 sm:px-16 py-8">
        <!-- Heading -->
        <h1 class="text-4xl font-roboto font-bold text-gray-800 mb-2">
            OpenPrismNode (OPN)
        </h1>
        <p class="text-lg text-gray-600 mb-4">
            Version @OpnVersion.GetVersion()
        </p>
        <p class="text-md text-gray-600 mb-4">
            Connected to:
            <span class="inline-block bg-gray-200 text-gray-800 px-2 py-1 rounded-md ml-2">
                @AppSettingsOptions.Value.PrismLedger.Name
            </span>
        </p>
        @if (string.IsNullOrWhiteSpace(@AppSettingsOptions.Value.CardanoWalletApiEndpoint))
        {
            <div class="mt-4 mb-4">
                            <span class="inline-block bg-amber-200 text-gray-800 px-2 py-1 rounded-md ml-2">
                                THE CARDANO WALLET API IS NOT CONFIGURED. Writing of DIDs to chain is disabled
                            </span>
            </div>
        }

        <!-- Intro / Call to Action -->
        <p class="text-gray-700 mb-6">
            This is the public interface of the OPN server.
            Please
            <a href="/login" target="_blank" class="text-blue-600 hover:underline mx-1">
                log in
            </a>
            for more features, or contact your administrator to request an API key.
        </p>

        <!-- Ports Information -->
        <div class="text-gray-700 mb-6">
            <h2 class="text-xl font-semibold text-gray-800 mb-2">
                Ports to connect to the node:
            </h2>
            <ul class="list-disc list-outside pl-5 space-y-2 text-left inline-block">
                <!-- REST-API -->
                <li class="leading-6">
                    <div class="mb-1">
                        <strong class="font-medium">REST-API:</strong>
                        <span class="inline-block bg-gray-200 text-gray-800 px-2 py-1 rounded-md ml-2">
                            @AppSettingsOptions.Value.ApiHttpPortUi
                        </span>
                    </div>
                    <div>
                        See
                        <a href="/swagger" target="_blank" class="text-blue-600 hover:underline">
                            Swagger / OpenAPI Documentation
                        </a>
                    </div>
                </li>
                <!-- gRPC -->
                <li class="leading-6">
                    <div>
                        <strong class="font-medium">gRPC:</strong>
                        <span class="inline-block bg-gray-200 text-gray-800 px-2 py-1 rounded-md ml-2">
                            @AppSettingsOptions.Value.GrpcPortUi
                        </span>
                    </div>
                </li>
            </ul>

        </div>

        <!-- Project Info -->
        <p class="text-gray-700">
            For more information about the project, visit
            <a
                href="https://github.com/bsandmann/OpenPrismNode"
                target="_blank"
                rel="noopener noreferrer"
                class="text-blue-600 hover:underline ml-1"
            >
                OpenPrismNode on GitHub
            </a>.
        </p>

        <!-- Conditional links for logged-in users -->
        @if (ShowAdminLink || ShowUserLink || ShowWalletLink)
        {
            <div class="bg-white border-t border-gray-200 py-8 mt-6">
                <div class="container mx-auto px-4 sm:px-16 space-y-6 text-center">
                    <h2 class="text-xl font-semibold text-gray-800">User Tools</h2>

                    @if (ShowAdminLink)
                    {
                        <div>
                            <p class="text-gray-700 mb-1">
                                You are logged in as an Administrator. Click below to configure the node:
                            </p>
                            <a href="/admin"
                               class="inline-block px-4 py-2 bg-slate-600 text-white rounded hover:bg-slate-700">
                                Administrator Page
                            </a>
                        </div>
                    }

                    @if (ShowUserLink)
                    {
                        <div>
                            <p class="text-gray-700 mb-1">
                                You have a shared-access token. Go here to create a new wallet:
                            </p>
                            <a href="/sharedUser"
                               class="inline-block px-4 py-2 bg-slate-600 text-white rounded hover:bg-slate-700">
                                Shared Page
                            </a>
                        </div>
                    }

                    @if (ShowWalletLink)
                    {
                        <div>
                            <p class="text-gray-700 mb-1">
                                You have created a wallet. Go here to fund it and view transaction details:
                            </p>
                            <a href="/walletUser"
                               class="inline-block px-4 py-2 bg-slate-600 text-white rounded hover:bg-slate-700">
                                Wallet Page
                            </a>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@code {
    [CascadingParameter] private Task<AuthenticationState>? AuthenticationStateTask { get; set; }
    private bool ShowAdminLink { get; set; }
    private bool ShowUserLink { get; set; }
    private bool ShowWalletLink { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthenticationStateTask != null)
        {
            var authState = await AuthenticationStateTask;
            var user = authState.User;

            if (user.IsInRole("Admin"))
            {
                ShowAdminLink = true;
                ShowUserLink = true; // Admin also gets the shared-access link, if desired
            }

            if (user.IsInRole("User"))
            {
                ShowUserLink = true;
            }

            if (user.IsInRole("WalletUser"))
            {
                ShowWalletLink = true;
            }
        }
    }

}
