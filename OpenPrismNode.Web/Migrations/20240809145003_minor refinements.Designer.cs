// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OpenPrismNode.Core;

#nullable disable

namespace OpenPrismNode.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240809145003_minor refinements")]
    partial class minorrefinements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OpenPrismNode.Core.Entities.BlockEntity", b =>
                {
                    b.Property<int>("BlockHeight")
                        .HasColumnType("integer");

                    b.Property<int>("BlockHashPrefix")
                        .HasColumnType("integer");

                    b.Property<byte[]>("BlockHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("EpochNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastParsedOnUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PreviousBlockBlockHashPrefix")
                        .HasColumnType("integer");

                    b.Property<int?>("PreviousBlockBlockHeight")
                        .HasColumnType("integer");

                    b.Property<int?>("PreviousBlockHashPrefix")
                        .HasColumnType("integer");

                    b.Property<int?>("PreviousBlockHeight")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeUtc")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("TxCount")
                        .HasColumnType("integer");

                    b.HasKey("BlockHeight", "BlockHashPrefix");

                    b.HasIndex("EpochNumber");

                    b.HasIndex("PreviousBlockBlockHeight", "PreviousBlockBlockHashPrefix");

                    b.ToTable("BlockEntities");
                });

            modelBuilder.Entity("OpenPrismNode.Core.Entities.EpochEntity", b =>
                {
                    b.Property<int>("EpochNumber")
                        .HasColumnType("integer");

                    b.Property<int>("NetworkType")
                        .HasColumnType("integer");

                    b.HasKey("EpochNumber");

                    b.HasIndex("NetworkType");

                    b.ToTable("EpochEntities");
                });

            modelBuilder.Entity("OpenPrismNode.Core.Entities.NetworkEntity", b =>
                {
                    b.Property<int>("NetworkType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastSynced")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("NetworkType");

                    b.ToTable("PrismNetworkEntities");
                });

            modelBuilder.Entity("OpenPrismNode.Core.Entities.BlockEntity", b =>
                {
                    b.HasOne("OpenPrismNode.Core.Entities.EpochEntity", "EpochEntity")
                        .WithMany("BlockEntities")
                        .HasForeignKey("EpochNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OpenPrismNode.Core.Entities.BlockEntity", "PreviousBlock")
                        .WithMany("NextBlocks")
                        .HasForeignKey("PreviousBlockBlockHeight", "PreviousBlockBlockHashPrefix");

                    b.Navigation("EpochEntity");

                    b.Navigation("PreviousBlock");
                });

            modelBuilder.Entity("OpenPrismNode.Core.Entities.EpochEntity", b =>
                {
                    b.HasOne("OpenPrismNode.Core.Entities.NetworkEntity", "NetworkEntity")
                        .WithMany("Epochs")
                        .HasForeignKey("NetworkType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NetworkEntity");
                });

            modelBuilder.Entity("OpenPrismNode.Core.Entities.BlockEntity", b =>
                {
                    b.Navigation("NextBlocks");
                });

            modelBuilder.Entity("OpenPrismNode.Core.Entities.EpochEntity", b =>
                {
                    b.Navigation("BlockEntities");
                });

            modelBuilder.Entity("OpenPrismNode.Core.Entities.NetworkEntity", b =>
                {
                    b.Navigation("Epochs");
                });
#pragma warning restore 612, 618
        }
    }
}
